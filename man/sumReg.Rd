% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sumReg.R
\name{sumReg}
\alias{sumReg}
\title{sum a(n) regression object}
\usage{
sumReg(model, ...)
}
\arguments{
\item{model}{a model object}

\item{...}{additional arguments passed to write.table function}

\item{n1}{This is the first line you want to get from your summary table. If not specified, it is automatically set when taking your function}

\item{n2}{This is the second line to which you want to get from summary table. If not specified, it is automatically set when taking your function}

\item{pType}{whether to export your original P, defult to "mark", another option is "value". When mark was selected. * stands for P < 0.05; $ stands for P < 0.01 # stands for P < 0.001. it was set default to \verb{\\ast}, \verb{\\dag}, \verb{\\ddag}. to replace  $ # respectively.}

\item{latex}{whether to export your result in latex form.In this package, it was set default to \verb{\\ast}, \verb{\\dag}, \verb{\\ddag}. to replace * $ # respectively. For more information about latex, please refer to https://en.wikibooks.org/wiki/LaTeX/Mathematics}

\item{toClip}{whether to export your result to clipboard. When you are using this package on remote server, This paramater would not work for that linux does not provide access to clipboard when you use ssh to log in.}

\item{digits}{digits of beta or OR}

\item{pDigits}{digits of P value}
}
\value{
return a tibble of regression table
}
\description{
sumReg summarizes information about the components of a model.
For technical reasons, changing the variable type directly in the formula is not supported. For example:
df <- mtcars
model <- lm("disp ~ as.factor(carb)", data = df)
res <- c218Tools::sumReg(model = model)
The above code chunk would cause error for that the package can not detect the target variable levels.
Rather, Please do it before the model.
df <- mtcars
df$carb <- as.factor(df$carb)
model <- lm("disp~ carb", data = df)
res <- c218Tools::sumReg(model = model)
}
\details{
In academic paper, only one or two lines of regression tables were shown rather than the whole table. Since we are only interested in the specific exposure. Thus, n1 stands for the line started from which we want to extract results. n2 stands for the line to which we want to extract. Normally, you do not need to change them since this package take the first independent variable in your regression model as the variable you are interested in. It will detect which line to take from the final table.
}
\examples{
# code

model <- lm("Sepal.Length~ Sepal.Width", data = iris)
regTab <- c218Tools::sumReg(model = model, toClip = TRUE)

}
\seealso{
[func()]
}
